name: empty_flutter_template
description: Ein neutrales Flutter-Template als Ausgangsbasis für neue Projekte.
# Die folgende Zeile verhindert, dass das Paket versehentlich mit
# `flutter pub publish` nach pub.dev veröffentlicht wird. Dies ist für private Pakete bevorzugt.
publish_to: 'none' # Entfernen Sie diese Zeile, wenn Sie auf pub.dev veröffentlichen möchten

# Die folgenden Zeilen definieren die Version und die Build-Nummer für Ihre Anwendung.
# Eine Versionsnummer besteht aus drei durch Punkte getrennten Zahlen, wie 1.2.43
# gefolgt von einer optionalen Build-Nummer, die durch ein + getrennt ist.
# Sowohl die Version als auch die Build-Nummer können beim Flutter-Build überschrieben werden,
# indem --build-name und --build-number angegeben werden.
# Bei Android wird build-name als versionName und build-number als versionCode verwendet.
# Weitere Informationen zur Android-Versionierung finden Sie unter https://developer.android.com/studio/publish/versioning
# Bei iOS wird build-name als CFBundleShortVersionString und build-number als CFBundleVersion verwendet.
# Weitere Informationen zur iOS-Versionierung finden Sie unter
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows wird build-name als Haupt-, Neben- und Patch-Teile
# der Produkt- und Dateiversionen verwendet, während build-number als Build-Suffix dient.
version: 1.0.0+1

environment:
  sdk: ">=3.3.0 <4.0.0"

# Abhängigkeiten geben andere Pakete an, die Ihr Paket benötigt, um zu funktionieren.
# Um Ihre Paketabhängigkeiten automatisch auf die neuesten Versionen zu aktualisieren,
# führen Sie `flutter pub upgrade --major-versions` aus. Alternativ können
# Abhängigkeiten manuell aktualisiert werden, indem Sie die Versionsnummern unten auf
# die neueste auf pub.dev verfügbare Version ändern. Um zu sehen, für welche Abhängigkeiten
# neuere Versionen verfügbar sind, führen Sie `flutter pub outdated` aus.
dependencies:
  flutter:
    sdk: flutter
  cupertino_icons: ^1.0.8
  shared_preferences: ^2.2.2
  intl: ^0.17.0
  dio: ^5.3.3
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  flutter_riverpod: ^2.4.0
  get_it: ^8.0.3
  json_serializable: ^6.9.0
  json_annotation: ^4.9.0
  freezed_annotation: ^2.4.1
  #audioplayers: ^6.4.0 // 06.06.2025: Auskommentiert wegen Konflikt mit just_audio/audio_service
  freezed: ^2.4.7
  provider: ^6.1.4
  shimmer: ^3.0.0
  xml_parser: ^1.0.0
  xml: ^5.0.2
  webfeed: ^0.7.0
  yaml: ^3.1.3
  emojis: ^0.9.9
  bloc: ^9.0.0
  equatable: ^2.0.7
  just_audio: ^0.10.4
  audio_session: ^0.2.2
  audio_service: ^0.18.12
  marquee: ^2.3.0
  sticky_headers: ^0.3.0+2
  #flutter_cast_framework: ^0.3.2
  font_awesome_flutter: ^10.7.0
  url_launcher: ^6.2.5

dev_dependencies:
  flutter_test:
    sdk: flutter
  mockito: ^5.4.5
  flutter_lints: ^6.0.0
  build_runner: ^2.4.6
  hive_generator: ^2.0.1
  test: ^1.25.15
  mocktail: ^1.0.3


  # Das untenstehende Paket "flutter_lints" enthält eine empfohlene Menge an Lints,
  # die gute Programmierpraktiken fördern. Das Lint-Set wird in der Datei
  # `analysis_options.yaml` im Wurzelverzeichnis Ihres Pakets aktiviert. Siehe diese Datei
  # für Informationen zum Deaktivieren bestimmter Lint-Regeln und zum Aktivieren zusätzlicher.

# Informationen zum generischen Dart-Teil dieser Datei finden Sie auf der
# folgenden Seite: https://dart.dev/tools/pub/pubspec

# Der folgende Abschnitt ist spezifisch für Flutter-Pakete.
flutter:

  # Die folgende Zeile stellt sicher, dass die Material Icons-Schriftart
  # mit Ihrer Anwendung eingebunden wird, sodass Sie die Icons in der
  # Material Icons-Klasse verwenden können.
  uses-material-design: true
  # generate: true

  assets:
    - lib/tenants/common/host_model.json
    - lib/tenants/common/assets/visit22.png
    - lib/tenants/collection_1590516386/host_model.json
    - lib/tenants/collection_1590516386/assets/assetLogo.png
    - lib/tenants/collection_1590516386/assets/logoUrl.png
    - lib/tenants/collection_1765742605/host_model.json
    - lib/tenants/collection_1469653179/host_model.json
    - lib/tenants/collection_1481054140/host_model.json
    - lib/tenants/collection_9876543210/host_model.json
    # ...weitere host_model.json falls benötigt...
    - lib/core/messaging/snackbar_config.yaml
    # Dynamische Asset-Ordner für alle Collections:
    - lib/tenants/collection_9876543210/assets/
    - lib/tenants/collection_1590516386/assets/logo.png
    - lib/tenants/collection_1765742605/assets/
    - lib/tenants/collection_1469653179/assets/
    - lib/tenants/collection_1481054140/assets/

    - assets/placeholders/host_model.json
    - assets/placeholders/podcast_collection.json
  # Um Assets zu Ihrer Anwendung hinzuzufügen, fügen Sie einen assets-Abschnitt wie folgt hinzu:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # Ein Bild-Asset kann auf eine oder mehrere auflösungsabhängige "Varianten" verweisen, siehe
  # https://flutter.dev/to/resolution-aware-images

  # Details zum Hinzufügen von Assets aus Paketabhängigkeiten finden Sie unter
  # https://flutter.dev/to/asset-from-package

  # Um benutzerdefinierte Schriftarten zu Ihrer Anwendung hinzuzufügen, fügen Sie hier einen fonts-Abschnitt
  # in diesem "flutter"-Abschnitt hinzu. Jeder Eintrag in dieser Liste sollte einen "family"-Schlüssel mit dem
  # Schriftfamiliennamen und einen "fonts"-Schlüssel mit einer Liste enthalten, die das Asset und andere
  # Beschreibungen für die Schriftart angibt. Zum Beispiel:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # Details zu Schriftarten aus Paketabhängigkeiten finden Sie unter
  # https://flutter.dev/to/font-from-package
